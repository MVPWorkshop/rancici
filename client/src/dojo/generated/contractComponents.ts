/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";
export type ContractComponents = Awaited<
 ReturnType<typeof defineContractComponents>
 >;	
export function defineContractComponents(world: World) {
  return {
  Battle: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, player1: RecsType.BigInt, player2: RecsType.BigInt, player1_formation_hash: RecsType.BigInt, player2_formation_hash: RecsType.BigInt, player1_formation_revealed: RecsType.Boolean, player2_formation_revealed: RecsType.Boolean, winner: RecsType.BigInt, status: RecsType.Number },
	      {
	        metadata: {
	          name: "Battle",
	          types: ["u32","contractaddress","contractaddress","felt252","felt252","bool","bool","contractaddress","enum"],
	          customTypes: ["BattleStatus"],
	        },
	      }
	    );
	  })(),
	  Character: (() => {
	    return defineComponent(
	      world,
	      { id: RecsType.Number, owner: RecsType.BigInt, battleId: RecsType.Number, health: RecsType.BigInt, armor: RecsType.BigInt, attack: RecsType.BigInt, dead: RecsType.Boolean },
	      {
	        metadata: {
	          name: "Character",
	          types: ["u32","contractaddress","u32","u256","u256","u256","bool"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  BattleConfig: (() => {
	    return defineComponent(
	      world,
	      { entity_id: RecsType.BigInt, counter: RecsType.Number },
	      {
	        metadata: {
	          name: "BattleConfig",
	          types: ["felt252","u32"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
  };
}
